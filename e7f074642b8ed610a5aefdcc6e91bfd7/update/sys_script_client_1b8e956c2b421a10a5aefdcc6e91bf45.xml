<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>On browser LLM field validation</description>
        <field>risk_impact_analysis</field>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>window.ai</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if (isLoading || newValue === '') {
      return;
   }
let prompt = `You are a part of a field validation script.

You are responsible for validating the value of a mandatory field against the following rules:

1. The text must be intelligible: Regardless of language used, the text must be readable and understandable. Spelling and grammar mistakes are acceptable, however gibberish and keyboard mashing nonsense are invalid.


Evaluate the following text between <field> tags against the previously mentioned rules
<field> ${newValue} </field>

You can only specify if a field is valie using a boolean <IS_VALID>
If the field is invalid, Record a short <REASON>

You are a part of an integration, so your response must be in well formatted JSON with the following structure:
{"is_valid":<IS_VALID>, "reason": <REASON>}

Reply only with a JSON string no markdown`;

let follow_up = `The JSON string you gave me is not valid and will not parse using JSON.parse. Please try again! Your response should not contain any markdown formatting, only a JSON string`;

	async function asdf(){

		//const session = await window.ai.createTextSession();
		const session = await ai.languageModel.create();

		let raw_response = await session.prompt(prompt);

		let response = parseResponse(raw_response);

		//debugger;

		if(response.json_error) {
			raw_response = await session.prompt(follow_up);
			response = parseResponse(raw_response);
			if (response.json_error)
				console.log("Invalid JSON response from the LLM " + response);
		}
	
		session.destroy();

		if(response.is_valid)
			return;

		//g_form.addErrorMessage('Risk and impact analysis validation failed: ' + response.reason);
		g_form.showFieldMsg('risk_impact_analysis', 'Risk and impact analysis validation failed: ' + response.reason, 'error');
		//g_form.flash('risk_impact_analysis', 'red', 0);
	}

	function parseResponse(text) {
		let response;
		try {
			response = JSON.parse(text);
		} catch (e) {
			console.log(e);
			return {is_valid: false, reason: "JSON string not well formed", json_error: true};
		}
		return response;
	}
	
	asdf();   
}]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-20 06:56:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1b8e956c2b421a10a5aefdcc6e91bf45</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>window.ai</sys_name>
        <sys_overrides/>
        <sys_package display_value="dthack2024" source="e7f074642b8ed610a5aefdcc6e91bfd7">e7f074642b8ed610a5aefdcc6e91bfd7</sys_package>
        <sys_policy/>
        <sys_scope display_value="dthack2024">e7f074642b8ed610a5aefdcc6e91bfd7</sys_scope>
        <sys_update_name>sys_script_client_1b8e956c2b421a10a5aefdcc6e91bf45</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-20 07:16:46</sys_updated_on>
        <table>change_request</table>
        <type>onChange</type>
        <ui_type>0</ui_type>
        <view/>
    </sys_script_client>
</record_update>
